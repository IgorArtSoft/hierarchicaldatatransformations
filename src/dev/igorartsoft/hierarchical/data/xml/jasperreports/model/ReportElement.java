//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.12.04 at 03:04:02 PM EST 
//


package dev.igorartsoft.hierarchical.data.xml.jasperreports.model;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://jasperreports.sourceforge.net/jasperreports}property" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://jasperreports.sourceforge.net/jasperreports}propertyExpression" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://jasperreports.sourceforge.net/jasperreports}printWhenExpression" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="key" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="style" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="positionType" default="FixRelativeToTop">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="Float"/>
 *             &lt;enumeration value="FixRelativeToTop"/>
 *             &lt;enumeration value="FixRelativeToBottom"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="stretchType" default="NoStretch">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="NoStretch"/>
 *             &lt;enumeration value="RelativeToTallestObject"/>
 *             &lt;enumeration value="RelativeToBandHeight"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="isPrintRepeatedValues" default="true">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="mode">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="Opaque"/>
 *             &lt;enumeration value="Transparent"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="x" use="required" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" />
 *       &lt;attribute name="y" use="required" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" />
 *       &lt;attribute name="width" use="required" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" />
 *       &lt;attribute name="height" use="required" type="{http://www.w3.org/2001/XMLSchema}NMTOKEN" />
 *       &lt;attribute name="isRemoveLineWhenBlank" default="false">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="isPrintInFirstWholeBand" default="false">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="isPrintWhenDetailOverflows" default="false">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="true"/>
 *             &lt;enumeration value="false"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="printWhenGroupChanges" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="forecolor" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="backcolor" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "property",
    "propertyExpression",
    "printWhenExpression"
})
@XmlRootElement(name = "reportElement")
public class ReportElement implements java.lang.Comparable{

    private List<Property> property;
    private List<PropertyExpression> propertyExpression;
    private PrintWhenExpression printWhenExpression;
    @XmlAttribute(name = "key")
    private String key;
    @XmlAttribute(name = "style")
    private String style;
    @XmlAttribute(name = "positionType")
    private String positionType;
    @XmlAttribute(name = "stretchType")
    private String stretchType;
    @XmlAttribute(name = "isPrintRepeatedValues")
    private String isPrintRepeatedValues;
    @XmlAttribute(name = "mode")
    private String mode;
    @XmlAttribute(name = "x", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    private String x;
    @XmlAttribute(name = "y", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    private String y;
    @XmlAttribute(name = "width", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    private String width;
    @XmlAttribute(name = "height", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    private String height;
    @XmlAttribute(name = "isRemoveLineWhenBlank")
    private String isRemoveLineWhenBlank;
    @XmlAttribute(name = "isPrintInFirstWholeBand")
    private String isPrintInFirstWholeBand;
    @XmlAttribute(name = "isPrintWhenDetailOverflows")
    private String isPrintWhenDetailOverflows;
    @XmlAttribute(name = "printWhenGroupChanges")
    private String printWhenGroupChanges;
    @XmlAttribute(name = "forecolor")
    private String forecolor;
    @XmlAttribute(name = "backcolor")
    private String backcolor;

    /**
     * Gets the value of the property property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the property property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Property }
     * 
     * 
     */
    public List<Property> getProperty() {
        if (property == null) {
            property = new ArrayList<Property>();
        }
        return this.property;
    }

    /**
     * Gets the value of the propertyExpression property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the propertyExpression property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPropertyExpression().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PropertyExpression }
     * 
     * 
     */
    public List<PropertyExpression> getPropertyExpression() {
        if (propertyExpression == null) {
            propertyExpression = new ArrayList<PropertyExpression>();
        }
        return this.propertyExpression;
    }

    /**
     * Gets the value of the printWhenExpression property.
     * 
     * @return
     *     possible object is
     *     {@link PrintWhenExpression }
     *     
     */
    public PrintWhenExpression getPrintWhenExpression() {
        return printWhenExpression;
    }

    /**
     * Sets the value of the printWhenExpression property.
     * 
     * @param value
     *     allowed object is
     *     {@link PrintWhenExpression }
     *     
     */
    public void setPrintWhenExpression(PrintWhenExpression value) {
        this.printWhenExpression = value;
    }

    /**
     * Gets the value of the key property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKey(String value) {
        this.key = value;
    }

    /**
     * Gets the value of the style property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStyle() {
        return style;
    }

    /**
     * Sets the value of the style property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStyle(String value) {
        this.style = value;
    }

    /**
     * Gets the value of the positionType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPositionType() {
        if (positionType == null) {
            return "FixRelativeToTop";
        } else {
            return positionType;
        }
    }

    /**
     * Sets the value of the positionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPositionType(String value) {
        this.positionType = value;
    }

    /**
     * Gets the value of the stretchType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStretchType() {
        if (stretchType == null) {
            return "NoStretch";
        } else {
            return stretchType;
        }
    }

    /**
     * Sets the value of the stretchType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStretchType(String value) {
        this.stretchType = value;
    }

    /**
     * Gets the value of the isPrintRepeatedValues property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsPrintRepeatedValues() {
        if (isPrintRepeatedValues == null) {
            return "true";
        } else {
            return isPrintRepeatedValues;
        }
    }

    /**
     * Sets the value of the isPrintRepeatedValues property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsPrintRepeatedValues(String value) {
        this.isPrintRepeatedValues = value;
    }

    /**
     * Gets the value of the mode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMode() {
        return mode;
    }

    /**
     * Sets the value of the mode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMode(String value) {
        this.mode = value;
    }

    /**
     * Gets the value of the x property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getX() {
        return x;
    }

    /**
     * Sets the value of the x property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setX(String value) {
        this.x = value;
    }

    /**
     * Gets the value of the y property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getY() {
        return y;
    }

    /**
     * Sets the value of the y property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setY(String value) {
        this.y = value;
    }

    /**
     * Gets the value of the width property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWidth() {
        return width;
    }

    /**
     * Sets the value of the width property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWidth(String value) {
        this.width = value;
    }

    /**
     * Gets the value of the height property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHeight() {
        return height;
    }

    /**
     * Sets the value of the height property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHeight(String value) {
        this.height = value;
    }

    /**
     * Gets the value of the isRemoveLineWhenBlank property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsRemoveLineWhenBlank() {
        if (isRemoveLineWhenBlank == null) {
            return "false";
        } else {
            return isRemoveLineWhenBlank;
        }
    }

    /**
     * Sets the value of the isRemoveLineWhenBlank property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsRemoveLineWhenBlank(String value) {
        this.isRemoveLineWhenBlank = value;
    }

    /**
     * Gets the value of the isPrintInFirstWholeBand property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsPrintInFirstWholeBand() {
        if (isPrintInFirstWholeBand == null) {
            return "false";
        } else {
            return isPrintInFirstWholeBand;
        }
    }

    /**
     * Sets the value of the isPrintInFirstWholeBand property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsPrintInFirstWholeBand(String value) {
        this.isPrintInFirstWholeBand = value;
    }

    /**
     * Gets the value of the isPrintWhenDetailOverflows property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIsPrintWhenDetailOverflows() {
        if (isPrintWhenDetailOverflows == null) {
            return "false";
        } else {
            return isPrintWhenDetailOverflows;
        }
    }

    /**
     * Sets the value of the isPrintWhenDetailOverflows property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIsPrintWhenDetailOverflows(String value) {
        this.isPrintWhenDetailOverflows = value;
    }

    /**
     * Gets the value of the printWhenGroupChanges property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrintWhenGroupChanges() {
        return printWhenGroupChanges;
    }

    /**
     * Sets the value of the printWhenGroupChanges property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrintWhenGroupChanges(String value) {
        this.printWhenGroupChanges = value;
    }

    /**
     * Gets the value of the forecolor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getForecolor() {
        return forecolor;
    }

    /**
     * Sets the value of the forecolor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setForecolor(String value) {
        this.forecolor = value;
    }

    /**
     * Gets the value of the backcolor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBackcolor() {
        return backcolor;
    }

    /**
     * Sets the value of the backcolor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBackcolor(String value) {
        this.backcolor = value;
    }
    
    public int getIntX(){
    	
    	int intX = Integer.MIN_VALUE;
    	try {
    		intX = Integer.parseInt( this.getX() );
		} catch (Exception e) {}
    	
    	return intX;
    }
       
    public int getIntY(){
    	
    	int intY = Integer.MIN_VALUE;
    	try {
    		intY = Integer.parseInt( this.getY() );
		} catch (Exception e) {}
    	
    	return intY;
    }

    public int getIntWidth(){
    	
    	int intWidth = Integer.MAX_VALUE;
    	try {
    		intWidth = Integer.parseInt( this.getWidth() );
		} catch (Exception e) {}
    	
    	return intWidth;
    }
    
    public int getIntHeight(){
    	
    	int intHeight = Integer.MAX_VALUE;
    	try {
    		intHeight = Integer.parseInt( this.getHeight() );
		} catch (Exception e) {}
    	
    	return intHeight;
    }

	@Override
	public int compareTo(Object arg0) {
		
		ReportElement currReportElement = (ReportElement)arg0;
		
		if ( this.getIntY() < currReportElement.getIntY() ) {
			return -1;
		}
		
		else if ( this.getIntY() > currReportElement.getIntY() ) {
			return 1;
		}
		else {
			if ( this.getIntX() < currReportElement.getIntX() ) {
				return -1;
			}
			else if ( this.getIntX() > currReportElement.getIntX() ) {
				return 1;
			}
		}
		
		return 0;
		
	}

	@Override
	public String toString(){
		return  "x=\"" + this.x + "\" y=\"" + this.y + "\" width=\"" + this.width + "\" height=\"" + this.height;
	}
	
	public String toString3(){
		return String.format("x=%-14s", this.x) + "y=" + this.y ;
	}

	public String toString2(){
		return  "Y=" + this.y + ", X=" + this.x +
				", Height=" + this.height + ", Width=" + this.width +  
				( ( this.forecolor != null ) ? ", Forecolor=" + this.forecolor : "" );
	}

}
